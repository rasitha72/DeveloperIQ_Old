version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.10
    commands:
      - echo Installing app dependencies...
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - source ~/.bashrc
      - echo 'Check kubectl version'
      - kubectl version --short --client
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - export LC_ALL="en_US.utf8"
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - echo Logging in to Amazon EKS...
      - aws eks --region us-east-1 update-kubeconfig --name IIT-EKS-DeveloperIQ
      - echo check config
      - kubectl config view --minify
      - echo check kubectl access
      - kubectl get svc
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image for your-app...
      - docker build -t write-metrics:$IMAGE_TAG .
      - docker tag write-metrics:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Configuring kubectl with EKS...
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name IIT-EKS-DeveloperIQ
      - echo Deploying to EKS...
      - kubectl apply -f k8s-deployment.yaml
      - kubectl rollout restart -f k8s-deployment.yaml
